language: generic

dist: trusty
sudo: required

matrix:
    include:
    - os: linux
      compiler: gcc
      env:
        - CC=gcc-7
        - CXX=g++-7
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']

    - os: linux
      compiler: gcc
      env:
        - CC=gcc-6
        - CXX=g++-6
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']

    - os: linux
      compiler: gcc
      env:
        - CC=gcc-5
        - CXX=g++-5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']

    - os: linux
      compiler: clang
      env: 
        - CC=clang-5.0
        - CXX=clang++-5.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
          packages: ['clang-5.0', 'g++-6']

    - os: linux
      compiler: clang
      env: 
        - CC=clang-3.9
        - CXX=clang++-3.9
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.9']
          packages: ['clang-3.9', 'g++-6']

    - os: linux
      compiler: clang
      env: 
        - CC=clang-3.8
        - CXX=clang++-3.8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.8']
          packages: ['clang-3.8', 'g++-6']

    - os: osx
      osx_image: xcode8

script:
  # get CMake (only for systems with brew - macOS)
  - |
     if [[ !(-x $(which cmake)) && (-x $(which brew)) ]]; then
       brew update
       brew install cmake
       cmake --version
     fi
  - mkdir -p build && cd build
  - cmake .. -DUNITTEST=ON && cmake --build . --target unittest --config Release -- -j4

before_install:
    - ./before_install.sh
